plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'io.dustin'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'mysql:mysql-connector-java:8.0.32'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.11.0'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

// ✅ JaCoCo 설정 추가
jacoco {
	toolVersion = "0.8.10"
}

jacocoTestReport {
	dependsOn test
	// ./gradlew clean test jacocoTestReport <- 테스트를 초기화하고 새로 테스트를 진행 후 리포트를 작성함
	reports {
		html.required.set(true)     // HTML 보고서
		xml.required.set(false)     // XML 보고서 필요시 true
		csv.required.set(false)     // CSV 보고서 필요시 true
	}
}


jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
//			element = 'CLASS'
			element = 'BUNDLE'


			limit {
				counter = 'LINE'
 value = 'COVEREDRATIO'
				minimum = 0.001 // 💥 80% 미만이면 빌드 실패
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification
